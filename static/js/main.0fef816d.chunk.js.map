{"version":3,"sources":["components/header/header.tsx","components/pageContainer/pageContainer.tsx","pages/newStory/newStoryPage.tsx","pages/notFound/notFoundPage.tsx","pages/signIn/signInPage.tsx","components/storyLine/storyLine.tsx","pages/story/demoStoryPage.tsx","pages/story/storyPage.tsx","pages/userDashboard/components/dashboardActions.tsx","pages/userDashboard/userDashboardPage.tsx","pages/welcome/welcomePage.tsx","Router.tsx","components/appBar/appBar.tsx","App.tsx","serviceWorker.ts","index.tsx","resources/book.jpg","resources/begin-random.jpg","resources/begin.jpg","logo.svg"],"names":["useStyles","makeStyles","theme","header","width","display","justifyContent","marginLeft","typoShare","margin","spacing","CustomHeader","classes","className","Typography","variant","color","page","flexDirection","alignItems","PageContainer","children","Container","link","startButton","marginTop","NewStoryPage","component","TextField","id","style","placeholder","size","InputLabelProps","shrink","IconButton","aria-label","Box","Button","startIcon","href","Routes","story","NotFoundPage","root","button","SignInPage","noValidate","autoComplete","label","type","dashboard","createStyles","popover","pointerEvents","paper","padding","StoryLine","line","lineMetaData","React","useState","anchorEl","setAnchorEl","handlePopoverClose","open","Boolean","align","aria-owns","undefined","aria-haspopup","onMouseEnter","event","currentTarget","onMouseLeave","Popover","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","chipsBox","chip","storyContent","storyLines","metaData","DemoStoryPage","Chip","maxWidth","map","icon","StoryPage","fullWidth","multiline","rows","demoStory","dashboardActions","card","media","height","DashboardActions","Card","CardActionArea","newStory","CardMedia","image","beginImg","title","CardContent","gutterBottom","beginRandomImg","flexWrap","overflow","backgroundColor","palette","background","gridList","transform","titleBar","minWidth","tileData","UserDashboardPage","GridList","cols","tile","GridListTile","key","src","logo","alt","GridListTileBar","actionIcon","WelcomePage","signin","RouteNames","Router","basename","exact","path","flexGrow","menuButton","marginRight","CustomAppBar","AppBar","position","Toolbar","edge","Badge","badgeContent","Math","floor","random","App","process","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.0fef816d.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'left',\n    marginLeft: '10px',\n  },\n  typoShare: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype CustomHeaderProps = {\n  header: string,\n}\n\nconst CustomHeader = ({ header }: CustomHeaderProps) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.header}>\n      <Typography className={classes.typoShare} variant='h3' color=\"textPrimary\">\n        {header}\n      </Typography>\n    </div>\n  );\n};\n\nexport default CustomHeader;","import Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { ReactNode } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  }\n}));\n\ntype PageContainerProps = {\n  children: ReactNode\n}\n\nconst PageContainer = ({ children }: PageContainerProps) => {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.page}>\n      {children}\n    </Container>\n  );\n};\n\nexport default PageContainer;","import { Box, Button } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport CreateIcon from '@material-ui/icons/Create';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport React from 'react';\nimport CustomHeader from '../../components/header/header';\nimport PageContainer from '../../components/pageContainer/pageContainer';\nimport { Routes } from '../../Router';\n\nconst useStyles = makeStyles((theme) => ({\n  typoShare: {\n    margin: theme.spacing(1),\n  },\n  link: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  startButton: {\n    marginTop: theme.spacing(1),\n  }\n}));\n\nexport default function NewStoryPage() {\n  const classes = useStyles();\n\n  return (\n    <PageContainer>\n      <CustomHeader header='Start a new story'/>\n\n      <Typography className={classes.typoShare} variant=\"body1\" color=\"textPrimary\" component=\"p\">\n        Begin a new story with a friend. You will alternatively complete the story, turn by turn. Just start by giving a name to your story.\n      </Typography>\n      <TextField\n        id=\"story-name\"\n        style={{ margin: 8 }}\n        placeholder=\"Name of your story\"\n        margin=\"normal\"\n        size='medium'\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <Typography className={classes.typoShare} variant=\"body1\" color=\"textPrimary\" component=\"p\">\n        Share the following link with your pen friend:\n      </Typography>\n      <div className={classes.link}>\n        <Typography className={classes.typoShare} variant=\"body2\" color=\"textPrimary\" component=\"p\">\n          https://fake.com/story/e7f81831-7f37-45c5-bc30-6db60d1f75e9/join\n        </Typography>\n        <IconButton aria-label=\"copy\">\n          <FileCopyIcon/>\n        </IconButton>\n      </div>\n      <Box className={classes.startButton}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          startIcon={<CreateIcon/>}\n          href={Routes.story}\n        >\n          Start writing!\n        </Button>\n      </Box>\n    </PageContainer>\n  );\n}\n","import React from 'react';\n\nconst NotFoundPage = () => (\n  <h1>\n    Not found :(\n  </h1>\n);\n\nexport default NotFoundPage;","import { Button } from '@material-ui/core';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport CustomHeader from '../../components/header/header';\nimport PageContainer from '../../components/pageContainer/pageContainer';\nimport { Routes } from '../../Router';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  button: {\n    margin: theme.spacing(1),\n  }\n}));\n\nconst SignInPage = () => {\n  const classes = useStyles();\n\n  return (\n    <PageContainer>\n      <CustomHeader header='Sign in'/>\n\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField id=\"username\" label=\"Username\" variant=\"outlined\"/>\n        <TextField id=\"password\" label=\"Password\" variant=\"outlined\" type=\"password\"/>\n      </form>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"large\"\n        startIcon={<LockOpenIcon/>}\n        href={Routes.dashboard}\n      >\n        Login\n      </Button>\n    </PageContainer>\n  );\n};\n\nexport default SignInPage;","import React from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popover: {\n      pointerEvents: 'none',\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n  }),\n);\n\nconst StoryLine = (line: string, lineMetaData: string) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n  const handlePopoverOpen = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <Typography\n        align='left'\n        aria-owns={open ? 'mouse-over-popover' : undefined}\n        aria-haspopup=\"true\"\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}\n      >\n        {line}\n      </Typography>\n      <Popover\n        id=\"mouse-over-popover\"\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        <Typography>{lineMetaData}</Typography>\n      </Popover>\n    </div>\n  );\n};\n\nexport default StoryLine;\n","import Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FaceIcon from '@material-ui/icons/Face';\nimport React from 'react';\nimport PageContainer from '../../components/pageContainer/pageContainer';\nimport StoryLine from '../../components/storyLine/storyLine';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    chipsBox: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    chip: {\n      margin: '10px',\n    },\n    storyContent: {\n      margin: '10px',\n    }\n  }),\n);\n\nconst storyLines = [\n  {\n    line: 'Mr. and Mrs. Dursley, of number four, Privet Drive, were proud to say that they were perfectly normal, thank you very much.',\n    metaData: 'Tom, Sun, 31 Dec 1899 00:00:00 GMT'\n  },\n  {\n    line: 'They were the last people you\\'d expect to be involved in anything strange or mysterious, because they just didn\\'t hold with such nonsense. ',\n    metaData: 'Jerry, Sun, 31 Dec 1899 00:00:00 GMT'\n  },\n  {\n    line: 'Mr. Dursley was the director of a firm called Grunnings, which made\\n' +\n      'drills. He was a big, beefy man with hardly any neck, although he did\\n' +\n      'have a very large mustache.',\n    metaData: 'Tom, Sun, 31 Dec 1899 00:00:00 GMT'\n  },\n  {\n    line: 'Mrs. Dursley was thin and blonde and had\\n' +\n      'nearly twice the usual amount of neck, which came in very useful as she\\n' +\n      'spent so much of her time craning over garden fences, spying on the\\n' +\n      'neighbors.',\n    metaData: 'Jerry, Sun, 31 Dec 1899 00:00:00 GMT'\n  },\n  {\n    line: 'The Dursleys had a small son called Dudley and in their\\n' +\n      'opinion there was no finer boy anywhere. ',\n    metaData: 'Tom, Sun, 31 Dec 1899 00:00:00 GMT'\n  },\n  {\n    line: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. You wrote rubbish, didn\\'t you?',\n    metaData: 'Yourself, Sun, 31 Dec 1899 00:00:00 GMT'\n  },\n];\n\nconst DemoStoryPage = () => {\n  const classes = useStyles();\n\n  return (\n    <PageContainer>\n      <Box className={classes.chipsBox}>\n        <Chip className={classes.chip} label=\"Jerry's turn\" variant=\"outlined\" color=\"secondary\" size=\"medium\"/>\n        <Chip className={classes.chip} label=\"8 sentences left\" variant=\"outlined\" color=\"primary\" size=\"medium\"/>\n      </Box>\n\n      <Typography color=\"textPrimary\" variant=\"h3\">\n        Tomorrow Never Dies\n      </Typography>\n      <Typography color=\"textSecondary\" variant=\"caption\">\n        By Tom & Jerry\n      </Typography>\n\n      <Container className={classes.storyContent} maxWidth=\"sm\">\n        {storyLines.map(({ line, metaData }) => (\n          StoryLine(line, metaData))\n        )\n        }\n      </Container>\n\n      <Chip icon={<FaceIcon/>} className={classes.chip} label=\"Waiting for Jerry\" color=\"secondary\"/>\n    </PageContainer>\n  );\n};\n\nexport default DemoStoryPage;","import { Button } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport React from 'react';\nimport PageContainer from '../../components/pageContainer/pageContainer';\nimport Box from '@material-ui/core/Box';\nimport StoryLine from '../../components/storyLine/storyLine';\nimport { Routes } from '../../Router';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    chipsBox: {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    chip: {\n      margin: '10px',\n    },\n    storyContent: {\n      margin: '10px',\n    }\n  }),\n);\n\nconst storyLines = [\n  {\n    line: 'Mr. and Mrs. Dursley, of number four, Privet Drive, were proud to say that they were perfectly normal, thank you very much.',\n    metaData: 'Tom, Sun, 31 Dec 1899 00:00:00 GMT'\n  },\n  {\n    line: 'They were the last people you\\'d expect to be involved in anything strange or mysterious, because they just didn\\'t hold with such nonsense. ',\n    metaData: 'Jerry, Sun, 31 Dec 1899 00:00:00 GMT'\n  },\n  {\n    line: 'Mr. Dursley was the director of a firm called Grunnings, which made\\n' +\n      'drills. He was a big, beefy man with hardly any neck, although he did\\n' +\n      'have a very large mustache.',\n    metaData: 'Tom, Sun, 31 Dec 1899 00:00:00 GMT'\n  },\n  {\n    line: 'Mrs. Dursley was thin and blonde and had\\n' +\n      'nearly twice the usual amount of neck, which came in very useful as she\\n' +\n      'spent so much of her time craning over garden fences, spying on the\\n' +\n      'neighbors.',\n    metaData: 'Jerry, Sun, 31 Dec 1899 00:00:00 GMT'\n  },\n  {\n    line: 'The Dursleys had a small son called Dudley and in their\\n' +\n      'opinion there was no finer boy anywhere. ',\n    metaData: 'Tom, Sun, 31 Dec 1899 00:00:00 GMT'\n  },\n];\n\nconst StoryPage = () => {\n  const classes = useStyles();\n\n  return (\n    <PageContainer>\n      <Box className={classes.chipsBox}>\n        <Chip className={classes.chip} label=\"Your turn\" variant=\"outlined\" color=\"secondary\" size=\"medium\"/>\n        <Chip className={classes.chip} label=\"9 sentences left\" variant=\"outlined\" color=\"primary\" size=\"medium\"/>\n      </Box>\n      <Typography color=\"textPrimary\" variant=\"h3\">\n        Tomorrow Never Dies\n      </Typography>\n      <Typography color=\"textSecondary\" variant=\"caption\">\n        By Tom & Jerry\n      </Typography>\n\n      <Container className={classes.storyContent} maxWidth=\"sm\">\n        {storyLines.map(({ line, metaData }) => (\n          StoryLine(line, metaData))\n        )\n        }\n      </Container>\n\n      <TextField\n        id=\"story-write\"\n        label=\"Continue the story\"\n        style={{ margin: 8 }}\n        fullWidth\n        multiline\n        rows={3}\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"large\"\n        startIcon={<TelegramIcon/>}\n        href={Routes.demoStory}\n      >\n        Submit\n      </Button>\n    </PageContainer>\n  );\n};\n\nexport default StoryPage;","import Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport beginRandomImg from '../../../resources/begin-random.jpg';\nimport beginImg from '../../../resources/begin.jpg';\nimport { Routes } from '../../../Router';\n\nconst useStyles = makeStyles({\n  dashboardActions: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  card: {\n    maxWidth: 240,\n    margin: '10px',\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function DashboardActions() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.dashboardActions}>\n      <Card className={classes.card}>\n        <CardActionArea href={Routes.newStory}>\n          <CardMedia\n            className={classes.media}\n            image={beginImg}\n            title=\"Start a new story\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              New Story\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Begin a new story with a pen friend!\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n      <Card className={classes.card}>\n        <CardActionArea href={Routes.dashboard}>\n          <CardMedia\n            className={classes.media}\n            image={beginRandomImg}\n            title=\"Join a random story\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Random story\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Someone tossed a bottle into the sea. Fancy getting the message?\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </div>\n  );\n}\n","import GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport React from 'react';\nimport CustomHeader from '../../components/header/header';\nimport PageContainer from '../../components/pageContainer/pageContainer';\nimport logo from '../../resources/book.jpg';\nimport { Routes } from '../../Router';\nimport DashboardActions from './components/dashboardActions';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    typoShare: {\n      margin: theme.spacing(1),\n    },\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)',\n    },\n    titleBar: {\n      minWidth: theme.spacing(2),\n    },\n  }),\n);\n\nconst tileData = [\n  { title: 'Parry Hotter' },\n  { title: 'Germione Hanger' },\n  { title: 'Won Reasley' },\n];\n\nconst UserDashboardPage = () => {\n  const classes = useStyles();\n\n  return (\n    <PageContainer>\n      <CustomHeader header='Dashboard'/>\n      <DashboardActions/>\n      <Typography className={classes.typoShare} variant='h4' color=\"textPrimary\">\n        My stories\n      </Typography>\n      <GridList className={classes.gridList} cols={2.5}>\n        {tileData.map((tile) => (\n          <GridListTile key={tile.title}>\n            <img src={logo} alt={tile.title}/>\n            <GridListTileBar\n              title={tile.title}\n              classes={{\n                root: classes.titleBar,\n              }}\n              actionIcon={\n                <IconButton aria-label={`star ${tile.title}`} href={Routes.dashboard}>\n                  <PlayCircleOutlineIcon/>\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </PageContainer>\n  );\n};\n\nexport default UserDashboardPage;\n","import { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FiberNewIcon from '@material-ui/icons/FiberNew';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport React from 'react';\nimport CustomHeader from '../../components/header/header';\nimport PageContainer from '../../components/pageContainer/pageContainer';\nimport logo from '../../logo.svg';\nimport { Routes } from '../../Router';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  }\n}));\n\nconst WelcomePage = () => {\n  const classes = useStyles();\n\n  return (\n    <PageContainer>\n      <CustomHeader header='Welcome'/>\n      <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"large\"\n        startIcon={<LockOpenIcon/>}\n        href={Routes.signin}\n      >\n        Sign in\n      </Button>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"secondary\"\n        size=\"large\"\n        startIcon={<FiberNewIcon/>}\n      >\n        Sign up\n      </Button>\n    </PageContainer>\n  );\n};\n\nexport default WelcomePage;","import React from 'react';\nimport { Route, HashRouter, Switch } from 'react-router-dom';\nimport NewStoryPage from './pages/newStory/newStoryPage';\nimport NotFoundPage from './pages/notFound/notFoundPage';\nimport SignInPage from './pages/signIn/signInPage';\nimport DemoStoryPage from './pages/story/demoStoryPage';\nimport StoryPage from './pages/story/storyPage';\nimport UserDashboardPage from './pages/userDashboard/userDashboardPage';\nimport WelcomePage from './pages/welcome/welcomePage';\n\nconst Router = () => (\n  <HashRouter basename='/'>\n    <Switch>\n      <Route exact path=\"/\" component={WelcomePage}/>\n      <Route path={`/${RouteNames.signin}`} component={SignInPage}/>\n      <Route path={`/${RouteNames.dashboard}`} component={UserDashboardPage}/>\n      <Route path={`/${RouteNames.newStory}`} component={NewStoryPage}/>\n      <Route path={`/${RouteNames.story}`} component={StoryPage}/>\n      <Route path={`/${RouteNames.demoStory}`} component={DemoStoryPage}/>\n      <Route component={NotFoundPage}/>\n    </Switch>\n  </HashRouter>\n);\n\nconst RouteNames = {\n  signin: 'signin',\n  dashboard: 'dashboard',\n  newStory: 'newStory',\n  story: 'story',\n  demoStory: 'demoStory',\n};\n\nexport const Routes = {\n  signin: `#${RouteNames.signin}`,\n  dashboard: `#${RouteNames.dashboard}`,\n  newStory: `#${RouteNames.newStory}`,\n  story: `#${RouteNames.story}`,\n  demoStory: `#${RouteNames.demoStory}`,\n};\n\nexport default Router;","import AppBar from '@material-ui/core/AppBar';\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport React from 'react';\nimport { Routes } from '../../Router';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst CustomAppBar = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" href={Routes.dashboard}>\n            <DashboardIcon/>\n          </IconButton>\n          <Typography variant=\"h4\" className={classes.title}>\n            Story Tok\n          </Typography>\n          <IconButton edge=\"end\" className={classes.menuButton} color=\"inherit\" aria-label=\"notification\">\n            <Badge badgeContent={Math.floor(Math.random() * 10)} color=\"secondary\">\n              <NotificationsIcon/>\n            </Badge>\n          </IconButton>\n          <IconButton edge=\"end\" className={classes.menuButton} color=\"inherit\" aria-label=\"exit\" href={Routes.signin}>\n            <ExitToAppIcon/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default CustomAppBar;","import React from 'react';\nimport CustomAppBar from './components/appBar/appBar';\nimport './App.css';\nimport Router from './Router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CustomAppBar/>\n      <header className=\"App-header\">\n        <Router/>\n      </header>\n      <footer className=\"App-footer\">\n        <pre>{process.env.NODE_ENV}</pre>\n        <pre>{process.env.REACT_APP_GIT_SHA}</pre>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/book.e1b7ca6a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/begin-random.77943a6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/begin.7895e492.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}